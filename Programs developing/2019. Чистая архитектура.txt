====================================================================================================
2019. Роберт Мартин. Чистая архитектура.
====================================================================================================
Ценности ПО:
1. Поведение.
Разработка функциональной спецификации или документа с требованиями.
2. Архитектура. Структура.
Разница между масштабом и формой часто является причиной роста стоимости разработки.
Архитектура должна быть максимально независима от формы.
Что важнее, функциональность или архитектура?
Матрица Эйзенхауэра. Два вида дел: срочные и важные.
Поведение = срочное. Архитектура = важное.
----------------------------------------------------------------------------------------------------
Начальные основы. Парадигмы программирования.
1. Структурное программирование.
2. ООП.
3. Функциональное программирование.
----------------------------------------------------------------------------------------------------
1. Структурное программирование.
if/then/else и do/while.
Управляющие структуры, делающие доказуемой правильность модуля, совпадают с набором структур, минимально 
необходимым для написания любой программы.
Edsger Wybe Dijkstra (Эдсгер Вайб Дейкстра). 1968. Go To Statement Considered Harmful (О вреде оператора Go To).
http://hosting.vspu.ac.ru/~chul/dijkstra/goto/goto.htm
http://www.u.arizona.edu/~rubinson/copyright_violations/Go_To_Considered_Harmful.html
----------------------------------------------------------------------------------------------------
2. ООП.
Инкапсуляция.
Наследование.
Полиморфизм. Инверсия зависимостей. Плагины.
----------------------------------------------------------------------------------------------------
3. Функциональное программирование.
Переменные в функциональных языках не изменяются.
В отсутствии изменяемых переменных, программа не может попасть в состояние взаимоблокировки (deadlock).
Условия достижения неизменяемости (ограничения изменяемости):
1. Деление на изменяемые и неизменяемые компоненты.
Транзакционная память интерпретирует переменные в ОЗУ.
----------------------------------------------------------------------------------------------------
Регистрация событий.
Обладая хранилищем достаточного объёма и мощности, можно сделать ПО полностью неизменяемым (функциональным).
Пример: системы управления версиями.
----------------------------------------------------------------------------------------------------
Принципы дизайна.
Принципы SOLID. 2004.
----------------------------------------------------------------------------------------------------
SRP (Single Responsibility Principle) - принцип единственной ответственности.
Программный модуль имеет только одну причину для изменения.
Признаки нарушения:
1. Непреднамеренное нарушение.
----------------------------------------------------------------------------------------------------
OCP (Open-Closed Principle) - принцип открытости-закрытости.
Бертран Мейер, 1980.
Простая для изменения система должна предусматривать простую возможность изменения поведения, путём
добавления нового, но не изменением существующего кода.
----------------------------------------------------------------------------------------------------
LSP (Liskov Substitution Principle) - принцип подстановки Барбары Лисков.
Барбара Лисков, 1988.
Для создания ПО из взаимозаменяемых частей, эти части должны соответствовать контракту, 
который позволяет заменять эти части друг другом.
----------------------------------------------------------------------------------------------------
ISP (Interface Segregation Principle) - принцип разделения интерфейсов.
Избегать зависимости от всего, что не используется.
----------------------------------------------------------------------------------------------------
DIP (Dependency Inversion Principle) - принцип инверсии зависимостей.
Код реализации высокоуровневой политики, не должен зависеть от кода реализации низкоуровневых деталей.
Детали должны зависеть от политики.
----------------------------------------------------------------------------------------------------
