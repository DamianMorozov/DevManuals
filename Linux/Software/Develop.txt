----------------------------------------------------------------------------------------------------
Develop
----------------------------------------------------------------------------------------------------
.NET Core for Ubuntu 18.04
https://dotnet.microsoft.com/download/linux-package-manager/ubuntu18-04/sdk-2.1.301
$ wget -q https://packages.microsoft.com/config/ubuntu/18.04/packages-microsoft-prod.deb
$ sudo dpkg -i packages-microsoft-prod.deb
Install the .NET SDK
$ sudo add-apt-repository universe
$ sudo apt-get install apt-transport-https
$ sudo apt-get update
$ sudo apt-get install dotnet-sdk-2.1
If you receive an error message similar to Unable to locate package dotnet-sdk-2.1, run the following commands.
$ sudo dpkg --purge packages-microsoft-prod && sudo dpkg -i packages-microsoft-prod.deb
$ sudo apt-get update
$ sudo apt-get install dotnet-sdk-2.1
If that doesn't work, you can run a manual install with the following commands
$ sudo apt-get install -y gpg
$ wget -qO- https://packages.microsoft.com/keys/microsoft.asc | gpg --dearmor > microsoft.asc.gpg
$ sudo mv microsoft.asc.gpg /etc/apt/trusted.gpg.d/
$ wget -q https://packages.microsoft.com/config/ubuntu/18.04/prod.list
$ sudo mv prod.list /etc/apt/sources.list.d/microsoft-prod.list
$ sudo chown root:root /etc/apt/trusted.gpg.d/microsoft.asc.gpg
$ sudo chown root:root /etc/apt/sources.list.d/microsoft-prod.list
$ sudo apt-get install -y apt-transport-https
$ sudo apt-get update
$ sudo apt-get install dotnet-sdk-2.1
----------------------------------------------------------------------------------------------------
.NET Core for Ubuntu 18.10
https://dotnet.microsoft.com/download/linux-package-manager/ubuntu18-10/sdk-2.1.301
$ wget -q https://packages.microsoft.com/config/ubuntu/18.10/packages-microsoft-prod.deb
$ sudo dpkg -i packages-microsoft-prod.deb
Install the .NET SDK
$ sudo apt-get install apt-transport-https
$ sudo apt-get update
$ sudo apt-get install dotnet-sdk-2.1
----------------------------------------------------------------------------------------------------
MonoDevelop
https://www.monodevelop.com/download/#fndtn-download-lin-ubuntu
Ubuntu 18.04 (i386, amd64, armhf)
$ sudo apt install apt-transport-https dirmngr
$ sudo apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys 3FA7E0328081BFF6A14DA29AA6A19B38D3D831EF
$ echo "deb https://download.mono-project.com/repo/ubuntu vs-bionic main" | sudo tee /etc/apt/sources.list.d/mono-official-vs.list
$ sudo apt update
$ sudo apt-get install monodevelop
----------------------------------------------------------------------------------------------------
$ sudo apt install gtk-sharp2
$ sudo apt install glib-sharp     -- Unable to locate package
$ sudo apt install pango-sharp    -- Unable to locate package
$ sudo apt install atk-sharp      -- Unable to locate package
$ sudo apt install gdk-sharp      -- Unable to locate package
$ sudo apt install glade-sharp    -- Unable to locate package
$ sudo apt install art-sharp      -- Unable to locate package
$ sudo apt install rsvg-sharp     -- Unable to locate package
$ sudo apt install gtk-dotnet     -- Unable to locate package
$ sudo apt install gnome-sharp    -- Unable to locate package
$ sudo apt install gnomevfs-sharp -- Unable to locate package
$ sudo apt install vte-sharp      -- Unable to locate package
$ sudo apt install gconf-sharp    -- Unable to locate package
$ sudo apt install gtkhtml-sharp  -- Unable to locate package
$ sudo apt-get install glade
$ sudo apt-get install libglade2.0-cil libglade2.0-cil-dev
$ sudo apt install libcanberra-gtk-module libcanberra-gtk3-module
----------------------------------------------------------------------------------------------------
Lazarus
http://www.lazarus-ide.org/
$ cd /home/Develop/Lazarus-ide.org/
$ sudo dpkg -i fpc-laz_3.0.4-1_amd64.deb
$ sudo dpkg -i fpc-src_3.0.4-2_amd64.deb
$ sudo dpkg -i lazarus-project_2.0.0-0_amd64.deb
$ gksudo lazarus-ide
----------------------------------------------------------------------------------------------------
Anaconda
https://www.anaconda.com/distribution/
$ bash Anaconda3-2019.03-Linux-x86_64.sh
Update conda
$ conda update -n base -c defaults conda
To activate this environment, use
$ conda activate deoldify
To deactivate an active environment, use
$ conda deactivate
Environments
$ conda info --envs
----------------------------------------------------------------------------------------------------
DeOldify
https://github.com/jantic/DeOldify
$ git clone https://github.com/jantic/DeOldify.git
$ cd DeOldify
$ conda env create -f environment.yml
Then start running with these commands:
$ source activate deoldify
$ jupyter lab
http://localhost:8888/lab
$ conda install -c conda-forge jupyterlab
$ conda install -c anaconda tensorflow-gpu
Pretrained Weights
https://www.dropbox.com/s/7r2wu0af6okv280/colorize_gen_192.h5
Then open the ColorizeVisualization.ipynb in Jupyter Lab
https://github.com/jantic/DeOldify/blob/master/ColorizeVisualization.ipynb
Colorizing Your Own Photos
vis.plot_transformed_image("test_images/old-moscow-photos.jpg")
vis.plot_transformed_image("test_images/Chief.jpg", render_factor=17)
----------------------------------------------------------------------------------------------------

